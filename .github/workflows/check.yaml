name: Build and test

on:
  push:
    branches: main

  pull_request:

  workflow_dispatch: # allows manual trigger

env:
  VITE_SOME_ISSUER_PLATFORM: "telegram" # To ensure that examples/some-issuer/frontend builds

jobs:

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crates:
          - services/web3id-issuer/Cargo.toml
          - services/web3id-verifier/Cargo.toml
          - test-tools/web3id-test/Cargo.toml
          - test-tools/issuer-front-end/backend/Cargo.toml
          - examples/some-issuer/Cargo.toml
          - examples/some-verifier/Cargo.toml
          - examples/some-verifier-lib/Cargo.toml
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Run cargo fmt
        run: |
          rustup component add rustfmt
          cargo fmt --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crates:
          - services/web3id-issuer/Cargo.toml
          - services/web3id-verifier/Cargo.toml
          - test-tools/web3id-test/Cargo.toml
          - test-tools/issuer-front-end/backend/Cargo.toml
          - examples/some-issuer/Cargo.toml
          - examples/some-verifier/Cargo.toml
          - examples/some-verifier-lib/Cargo.toml
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Clippy
        run: |
          rustup component add clippy
      - name: Run Clippy
        run: |
          cargo clippy --locked --all-targets --all-features --no-deps -- -D warnings

  "lint_ts":
    name: lint:check-typescript
    # Don't run on draft pull requests
    if: ${{ !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dirs:
          - examples/some-verifier/frontend
          - examples/some-issuer/frontend
          - services/web3id-verifier-ts
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Dependencies
        working-directory: ${{ matrix.dirs }}
        run: yarn
      - name: Format
        working-directory: ${{ matrix.dirs }}
        run: yarn fmt-check
      - name: Lint
        working-directory: ${{ matrix.dirs }}
        run: yarn lint
      - name: Build
        working-directory: ${{ matrix.dirs }}
        run: yarn build
