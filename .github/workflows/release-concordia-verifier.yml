# This job builds and publishes a docker image for the concordia verifier.
name: Create and publish a Docker image for the Concordia verifier.

on:
  workflow_dispatch: # allows manual trigger

  push:
    tags:
      # frontend-backend version convention
      - 'concordia-verifier/*.*.*-*.*.*'

env:
  REGISTRY: docker.io
  IMAGE_NAME: concordia-verifier

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    environment: concordia-builds
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      # Uses the `docker/login-action` action to log in to the Container registry.
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract tag from package.json
        id: meta
        run: |
          export FRONTEND_VERSION=$(jq -r .version examples/some-verifier/frontend/package.json)
          export BACKEND_VERSION=$(yq .package.version examples/some-verifier/Cargo.toml)
          export VERSION=${FRONTEND_VERSION}-${BACKEND_VERSION}
          export FULL_IMAGE_TAG="${{ env.REGISTRY }}/concordium/$IMAGE_NAME:$VERSION"
          echo "::notice FULL_IMAGE_TAG=${FULL_IMAGE_TAG}"
          # Make sure the image does not exist. Abort if we can retrieve any metadata.
          if docker manifest inspect ${FULL_IMAGE_TAG} > /dev/null; then
             echo "::error ${FULL_IMAGE_TAG} already exists"
             exit 1
          else
             # Store the full image tag into a tag variable for the following step.
             echo "tag=${FULL_IMAGE_TAG}" > "$GITHUB_OUTPUT"
          fi
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          file: ./examples/some-verifier/scripts/build.Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tag }}
